<!--
 MIT License

Copyright (c) 2023 Mahendra Goyal

Permission is hereby granted, free of charge, to any person obtaining 
a copy of this software and associated documentation files (the "Software"), 
to deal in the Software without restriction, including without limitation 
the rights to use, copy, modify, merge, publish, distribute, sublicense, 
and/or sell copies of the Software, and to permit persons to whom the Software 
is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included 
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, 
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
OTHER DEALINGS IN THE SOFTWARE.
-->
    
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=netstandard"
    xmlns:control="clr-namespace:TrainerApp.Controls"
    xmlns:command="clr-namespace:TrainerApp.ViewModel.Commands">
    <sys:String x:Key="NormalTextPhrase">The quick brown fox jumps over the lazy dog</sys:String>
    <sys:String x:Key="NumericTextPhrase">0 1 2 3 4 5 6 7 8 9</sys:String>
    <sys:String x:Key="LowerCaseTextPhrase">the quick brown fox jumps over the lazy dog</sys:String>
    <sys:String x:Key="UpperCaseTextPhrase">THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</sys:String>

    <SolidColorBrush Color="#FFFFEE93" x:Key="HighlightedAccentBrush"/>
    <SolidColorBrush Color="#FFD700" x:Key="AccentBrush"/>
    <SolidColorBrush Color="#8A6400" x:Key="DisabledAccentBrush"/>

    <SolidColorBrush Color="#4C4C4C" x:Key="HighlightedBackgroundBrush"/>
    <SolidColorBrush Color="#252525" x:Key="PressedBackgroundBrush"/>
    <SolidColorBrush Color="#2B2B2B" x:Key="BackgroundBrush"/>
    <SolidColorBrush Color="#545454" x:Key="DisabledBackgroundBrush"/>

    <SolidColorBrush Color="#AFAFAF" x:Key="DisabledForegroundBrush"/>
    <SolidColorBrush Color="#C8C8C8" x:Key="ForegroundBrush"/>

    <SolidColorBrush Color="#A9A9A9" x:Key="BorderBrush"/>

    <Style TargetType="Window" x:Key="DarkWindow">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="Control">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="Layout"
                        Background="{TemplateBinding Background}"
                        CornerRadius="2"
                        BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HighlightedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PressedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderEdge" TargetType="RepeatButton">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">

                    <Rectangle 
                        Height="3" 
                        Fill="{StaticResource DisabledForegroundBrush}" 
                        Stroke="{StaticResource DisabledForegroundBrush}" 
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderInner" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle 
                        Height="3" 
                        Fill="{StaticResource AccentBrush}" 
                        Stroke="{StaticResource HighlightedAccentBrush}" 
                        StrokeThickness="0.6" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Width="10" Height="10" Fill="{StaticResource AccentBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Focusable" Value="False"/>
    </Style>
    <Style TargetType="{x:Type control:RangeSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:RangeSlider}">
                    <StackPanel ClipToBounds="False" Name="PART_RangeSliderContainer" Orientation="Horizontal">
                        <RepeatButton Name="PART_LeftEdge" Style="{StaticResource SliderEdge}" />
                        <Thumb Name="PART_LeftThumb" Cursor="Arrow" Style="{StaticResource SliderThumb}" />
                        <Thumb Name="PART_MiddleThumb" MinWidth="10" Cursor="Arrow" Style="{StaticResource SliderInner}" />
                        <Thumb Name="PART_RightThumb" Cursor="Arrow" Style="{StaticResource SliderThumb}" />
                        <RepeatButton Name="PART_RightEdge" Style="{StaticResource SliderEdge}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
    </Style>

    <DataTemplate DataType="{x:Type command:EvaluateModelCommand}" x:Key="ModelEvaluatedTemplated">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120" />
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="120" />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <TextBlock Foreground="{StaticResource AccentBrush}" Text="Micro Accurcay"/>
            <TextBlock Grid.Column="1" Text="{Binding MicroAccuracy, Mode=OneWay}"/>
            <TextBlock Foreground="{StaticResource AccentBrush}" Grid.Row="1" Text="Macro Accurcay"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding MacroAccuracy, Mode=OneWay}"/>

            <TextBlock Foreground="{StaticResource AccentBrush}" Text="Log Loss" Grid.Column="2"/>
            <TextBlock Text="{Binding LogLoss,Mode=OneWay}" Grid.Column="3"/>
            <TextBlock Foreground="{StaticResource AccentBrush}" Grid.Row="1" Text="Log Loss Reduction" Grid.Column="2"/>
            <TextBlock Text="{Binding LogLossReduction,Mode=OneWay}" Grid.Row="1" Grid.Column="3"/>
        </Grid>
    </DataTemplate>


    <DataTemplate DataType="{x:Type command:EvaluateModelCommand}" x:Key="ModelEvaluatingTemplate">
        <TextBlock Foreground="{StaticResource AccentBrush}" Text="Evaluating model .."/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type command:EvaluateModelCommand}" x:Key="ModelErorTemplate">
        <TextBlock Foreground="{StaticResource AccentBrush}" Text="{Binding Error, Mode=OneWay}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type command:EvaluateModelCommand}" x:Key="ModelLoadingTemplate">
        <StackPanel>
            <TextBlock Margin="0,5" Text="Loading data.."/>
            <ProgressBar 
                    Width="400"
                    Height="5"
                    Background="{StaticResource ForegroundBrush}"
                    Foreground="{StaticResource AccentBrush}"
                    Maximum="{Binding Maximum, Mode=OneWay}"
                    Value="{Binding Current, Mode=OneWay}"/>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>