<!--
 MIT License

Copyright (c) 2023 Mahendra Goyal

Permission is hereby granted, free of charge, to any person obtaining 
a copy of this software and associated documentation files (the "Software"), 
to deal in the Software without restriction, including without limitation 
the rights to use, copy, modify, merge, publish, distribute, sublicense, 
and/or sell copies of the Software, and to permit persons to whom the Software 
is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included 
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, 
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
OTHER DEALINGS IN THE SOFTWARE.
-->
    
<Window 
    x:Class="TrainerApp.View.TrainerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="clr-namespace:TrainerApp.View" 
    xmlns:sys="clr-namespace:System;assembly=netstandard"
    xmlns:control="clr-namespace:TrainerApp.Controls"
    xmlns:command="clr-namespace:TrainerApp.ViewModel.Commands"
    WindowState="Maximized"
    mc:Ignorable="d"
    Style="{StaticResource DarkWindow}"
    DataContext="{StaticResource ViewModel}"
    Title="Model Trainer" 
    Height="800" 
    Width="1280">

    <Window.InputBindings>
        <KeyBinding Key="Right" Command="{Binding ChangeFontCommand}">
            <KeyBinding.CommandParameter>
                <sys:Int32>1</sys:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="Left" Command="{Binding ChangeFontCommand}">
            <KeyBinding.CommandParameter>
                <sys:Int32>-1</sys:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="Return" Command="{Binding AddFontSettingCommand}"/>
        <KeyBinding Key="Delete" Command="{Binding RemoveFontSettingCommand}"/>
        <KeyBinding Modifiers="Shift" Key="Delete" Command="{Binding ClearFontSettingsCommand}"/>
        <KeyBinding Key="F5" Command="{Binding TrainModelCommand}" />
        <KeyBinding Key="F9" Command="{Binding EvaluateModelCommand}"/>
        <KeyBinding Key="F8" Command="{Binding CheckAccuracyCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="500" Width="*" />
            <ColumnDefinition Width="2*" />
            <ColumnDefinition MinWidth="360" Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="120" />
            <RowDefinition Height="*" />
            <RowDefinition Height="80" />
        </Grid.RowDefinitions>
        <Grid Background="{StaticResource AccentBrush}" Grid.Column="0" HorizontalAlignment="Stretch" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="1"
                VerticalAlignment="Center" 
                FontSize="54"
                HorizontalAlignment="Center"
                Foreground="{StaticResource BackgroundBrush}" 
                FontWeight="Light"
                FontFamily="Alias">
                <Run Text="MODEL TRAINER"/>
                <Path
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Fill="{StaticResource BackgroundBrush}"
                    Data="M10920 12791 c-42 -13 -82 -36 -178 -106 -105 -75 -138 -88 -269 -109 -131 -21 -182 -46 -254 -125 -59 -64 -226 -210 -241 -211 -4 0 -19 21 -32 48 -37 72 -82 130 -117 147 -30 16 -32 16 -58 -8 -34 -31 -137 -100 -511 -339 -944 -603 -1330 -867 -1376 -939 -13 -21 -40 -93 -59 -161 -20 -68 -45 -137 -56 -155 -32 -51 -108 -113 -223 -182 -208 -123 -241 -162 -286 -341 -39 -156 -72 -200 -147 -200 -18 0 -41 -16 -75 -50 -55 -56 -90 -76 -221 -126 -124 -47 -144 -61 -283 -194 -66 -63 -145 -128 -175 -145 -47 -26 -64 -30 -134 -30 -71 0 -88 4 -155 36 -118 57 -150 86 -212 191 -32 53 -73 107 -92 122 -20 15 -84 49 -143 77 -60 28 -144 76 -188 108 -126 92 -137 96 -240 95 -106 0 -141 -13 -356 -130 -219 -119 -302 -140 -416 -106 -38 12 -111 26 -163 32 -144 16 -154 19 -226 66 -37 24 -75 44 -85 44 -11 0 -30 -17 -45 -41 -25 -41 -26 -41 -67 -33 -81 15 -188 8 -252 -17 -59 -24 -62 -27 -120 -121 -11 -18 -34 -40 -50 -48 -48 -24 -163 -17 -305 19 -150 37 -248 41 -297 11 -18 -11 -43 -41 -58 -69 -22 -44 -29 -51 -67 -58 -24 -5 -63 -5 -88 -1 -25 4 -80 11 -123 14 -75 7 -80 6 -150 -29 -39 -20 -119 -73 -176 -118 l-105 -81 -19 23 c-62 77 -70 105 -78 258 -9 195 -50 340 -150 531 -65 124 -97 160 -210 235 -295 196 -550 268 -778 220 -175 -37 -353 -136 -474 -264 -80 -85 -119 -150 -152 -254 -56 -174 -17 -361 146 -704 49 -104 55 -123 39 -123 -30 0 -60 -33 -67 -72 -14 -88 60 -221 203 -367 95 -98 104 -105 140 -105 22 1 49 4 60 8 20 7 22 3 32 -56 30 -174 25 -225 -28 -260 -23 -16 -40 -38 -50 -68 -14 -40 -19 -45 -55 -52 -51 -10 -70 -34 -95 -117 -11 -37 -28 -75 -37 -83 -10 -9 -41 -19 -70 -23 -70 -9 -76 -19 -68 -110 8 -84 2 -100 -45 -110 -53 -12 -90 -75 -162 -279 -150 -425 -158 -504 -70 -694 60 -129 66 -157 45 -217 -15 -46 -15 -48 12 -105 35 -73 32 -98 -31 -232 -45 -97 -46 -102 -42 -176 4 -59 15 -103 48 -187 74 -192 83 -229 83 -350 0 -95 -4 -119 -27 -178 -29 -76 -33 -123 -11 -153 8 -12 44 -36 81 -55 55 -27 75 -44 113 -97 25 -36 64 -88 87 -116 22 -28 67 -89 99 -136 95 -137 176 -210 297 -269 141 -69 239 -95 358 -95 185 0 346 85 531 282 70 74 90 104 136 201 65 138 80 157 258 341 186 191 239 271 281 426 14 52 23 68 44 79 15 8 46 35 69 61 l41 47 62 -6 c35 -3 123 -1 195 5 101 8 140 8 162 -2 19 -7 53 -46 97 -108 37 -53 93 -122 124 -152 170 -168 391 -184 681 -49 129 60 172 63 177 14 1 -16 -13 -91 -32 -165 -68 -265 -82 -627 -45 -1161 l12 -175 -26 -45 c-16 -27 -28 -68 -33 -106 -5 -53 -10 -63 -25 -63 -37 0 -110 -43 -149 -88 -72 -81 -83 -165 -54 -419 23 -209 13 -245 -90 -312 -88 -58 -184 -161 -223 -242 -63 -130 -73 -201 -103 -709 -27 -454 -43 -598 -90 -780 -130 -506 -340 -789 -745 -1001 -114 -60 -188 -85 -312 -104 -245 -39 -333 -75 -390 -159 -29 -42 -33 -57 -33 -111 0 -67 21 -110 70 -147 40 -29 214 -51 350 -44 153 8 215 20 340 66 131 48 199 60 337 61 82 1 137 -6 228 -26 138 -30 228 -33 341 -10 93 20 162 53 197 95 40 47 51 100 41 210 -21 247 19 427 157 711 52 107 73 139 87 139 11 0 84 -7 163 -15 247 -25 442 -35 678 -35 l228 0 6 53 c6 49 15 362 37 1197 7 292 12 357 29 426 11 44 32 152 46 240 34 210 48 257 117 399 67 138 74 170 87 362 13 189 35 270 170 635 53 144 147 447 250 810 l62 217 56 58 c225 233 387 578 384 822 -1 80 -18 150 -72 287 l-40 103 25 98 c21 84 91 315 111 364 3 8 22 23 43 32 78 35 302 239 456 417 132 152 182 223 304 435 25 45 69 98 119 145 80 77 99 90 379 273 216 141 301 228 625 632 269 337 304 375 714 760 424 399 479 459 819 883 98 122 192 233 210 246 17 13 69 41 116 63 88 41 206 128 278 207 40 44 42 48 42 109 0 74 -11 110 -56 187 -57 99 -58 94 48 145 147 69 213 89 298 89 62 1 84 -4 125 -25 45 -23 50 -29 47 -55 -2 -16 -4 -48 -5 -71 -1 -36 -5 -43 -22 -43 -36 0 -65 -28 -65 -63 0 -77 102 -157 199 -157 34 0 45 5 68 35 19 23 59 50 120 80 142 69 154 93 199 394 26 176 27 190 16 325 -7 78 -19 170 -28 206 -50 196 -177 309 -304 271z">
                    <Path.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-0.004" ScaleY="0.004"/>
                            <RotateTransform Angle="-180"/>
                        </TransformGroup>
                    </Path.LayoutTransform>
                </Path>
                <Run Text="for text recognition in ML.NET"/>
            </TextBlock>
        </Grid>
        <ContentControl
            Grid.Row="1"
            FontFamily="{Binding SelectedFont, Mode=OneWay, Converter={StaticResource NameToFontConverter}}"
            Margin="0,0,5,3" 
            DataContext="{StaticResource ViewModel}">
            <!-- Font Viewer -->
            <Border 
                Background="{StaticResource PressedBackgroundBrush}" 
                ClipToBounds="True"
                BorderBrush="{StaticResource DisabledBackgroundBrush}"
                BorderThickness="0.75">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Border
                        Padding="10" 
                        BorderThickness="0,0,0,0.75" BorderBrush="{StaticResource DisabledBackgroundBrush}"
                        Background="{StaticResource BackgroundBrush}">
                        <Grid>
                            <Button
                                Command="{Binding ChangeFontCommand}"
                                HorizontalAlignment="Left"
                                Margin="10,0" Width="40" Height="40">
                                <Button.CommandParameter>
                                    <sys:Int32>-1</sys:Int32>
                                </Button.CommandParameter>
                                <Path
                                    Width="18" Height="18" Stretch="Uniform" StrokeThickness="2"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground, Mode=OneWay}"
                                    Data="M 15 0 L 0 20 L 15 40"/>
                            </Button>
                            <Button
                                Command="{Binding ChangeFontCommand}"
                                HorizontalAlignment="Right"
                                Margin="10,0" Width="40" Height="40">
                                <Button.CommandParameter>
                                    <sys:Int32>1</sys:Int32>
                                </Button.CommandParameter>
                                <Path
                                    Width="18" Height="18" Stretch="Uniform" StrokeThickness="2"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground, Mode=OneWay}"
                                    Data="M 0 0 L 15 20 L 0 40"/>
                            </Button>
                            <TextBlock 
                                FontSize="18"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" 
                                Foreground="{StaticResource ForegroundBrush}"
                                Text="{Binding SelectedFont, Mode=OneWay}" 
                                FontFamily="Segio UI"/>
                        </Grid>
                    </Border>
                    <ScrollViewer VerticalScrollBarVisibility="Hidden" Grid.Row="1">
                        <StackPanel Margin="20">
                            <view:SampleText
                                FontStyle="Normal"
                                FontWeight="Normal"
                                ShowLowerCase="{Binding ElementName=LowerCaseCheckBox, Path=IsChecked, Mode=OneWay}"
                                ShowUpperCase="{Binding ElementName=UpperCaseCheckBox, Path=IsChecked, Mode=OneWay}"
                                ShowNumerics="{Binding ElementName=NumericsCheckBox, Path=IsChecked, Mode=OneWay}"
                                Visibility="{Binding ElementName=NormalCheckBox, Path=IsChecked, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                VerticalAlignment="Top" />
                            <view:SampleText
                                FontStyle="Italic"
                                FontWeight="Normal"
                                ShowLowerCase="{Binding ElementName=LowerCaseCheckBox, Path=IsChecked, Mode=OneWay}"
                                ShowUpperCase="{Binding ElementName=UpperCaseCheckBox, Path=IsChecked, Mode=OneWay}"
                                ShowNumerics="{Binding ElementName=NumericsCheckBox, Path=IsChecked, Mode=OneWay}"
                                Visibility="{Binding ElementName=ItalicCheckBox, Path=IsChecked, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                VerticalAlignment="Top" />
                            <view:SampleText
                                FontStyle="Normal"
                                FontWeight="Bold"
                                ShowLowerCase="{Binding ElementName=LowerCaseCheckBox, Path=IsChecked, Mode=OneWay}"
                                ShowUpperCase="{Binding ElementName=UpperCaseCheckBox, Path=IsChecked, Mode=OneWay}"
                                ShowNumerics="{Binding ElementName=NumericsCheckBox, Path=IsChecked, Mode=OneWay}"
                                Visibility="{Binding ElementName=BoldCheckBox, Path=IsChecked, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                VerticalAlignment="Top" />
                            <view:SampleText
                                FontStyle="Italic"
                                FontWeight="Bold"
                                ShowLowerCase="{Binding ElementName=LowerCaseCheckBox, Path=IsChecked, Mode=OneWay}"
                                ShowUpperCase="{Binding ElementName=UpperCaseCheckBox, Path=IsChecked, Mode=OneWay}"
                                ShowNumerics="{Binding ElementName=NumericsCheckBox, Path=IsChecked, Mode=OneWay}"
                                Visibility="{Binding ElementName=BoldItalicCheckBox, Path=IsChecked, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                VerticalAlignment="Top" />
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Border>
        </ContentControl>
        <WrapPanel 
            HorizontalAlignment="Stretch"
            Background="#11FFFFFF"
            Orientation="Vertical" 
            ItemWidth="400"
            Grid.Row="1"
            Grid.Column="1">
            <Grid Margin="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="160"/>
                    <ColumnDefinition Width="160"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <TextBlock 
                    Grid.ColumnSpan="2"
                    Text="Font weight settings" 
                    FontSize="18" 
                    Margin="0,10"
                    Foreground="{StaticResource AccentBrush}"/>
                <CheckBox 
                    Grid.Row="1"
                    Margin="0,3"
                    x:Name="NormalCheckBox"
                    Content="Normal Font" 
                    IsChecked="{Binding FontSetting.UseNormalFont, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Foreground="{StaticResource ForegroundBrush}"/>
                <CheckBox 
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="0,3"
                    x:Name="ItalicCheckBox"
                    Content="Italic Font" 
                    IsChecked="{Binding FontSetting.UseItalicFont, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Foreground="{StaticResource ForegroundBrush}"/>
                <CheckBox 
                    Grid.Column="1"
                    Grid.Row="1"
                    Margin="0,3"
                    x:Name="BoldCheckBox"
                    Content="Bold Font" 
                    IsChecked="{Binding FontSetting.UseBoldFont, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Foreground="{StaticResource ForegroundBrush}"/>
                <CheckBox 
                    Grid.Column="1"
                    Grid.Row="2"
                    Margin="0,3"
                    x:Name="BoldItalicCheckBox"
                    Content="Bold-Italic Font" 
                    IsChecked="{Binding FontSetting.UseBoldItalicFont, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Foreground="{StaticResource ForegroundBrush}"/>
            </Grid>

            <Grid Margin="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="160"/>
                    <ColumnDefinition Width="160"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <TextBlock 
                    Grid.ColumnSpan="2"
                    Text="Character settings" 
                    FontSize="18" 
                    Margin="0,10"
                    Foreground="{StaticResource AccentBrush}"/>
                <CheckBox 
                    Grid.Row="1"
                    Margin="0,3"
                    x:Name="LowerCaseCheckBox"
                    Content="Lowercase"
                    IsChecked="{Binding FontSetting.UseLowerCaseLetters, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    Foreground="{StaticResource ForegroundBrush}"/>
                <CheckBox 
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="0,3"
                    x:Name="UpperCaseCheckBox"
                    Content="Uppercase" 
                    IsChecked="{Binding FontSetting.UseUpperCaseLetters,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    Foreground="{StaticResource ForegroundBrush}"/>
                <CheckBox 
                    Grid.Column="1"
                    Grid.Row="1"
                    Margin="0,3"
                    x:Name="NumericsCheckBox"
                    Content="Numbers" 
                    IsChecked="{Binding FontSetting.UseNumbers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Foreground="{StaticResource ForegroundBrush}"/>
            </Grid>

            <StackPanel Margin="20" ClipToBounds="False">
                <TextBlock 
                    Grid.ColumnSpan="2"
                    Text="Normal font rotation settings" 
                    FontSize="18" 
                    Margin="0,10"
                    Foreground="{StaticResource AccentBrush}"/>
                <CheckBox 
                    Foreground="{StaticResource ForegroundBrush}"
                    x:Name="UseNormalFontRotation"
                    Content="Use normal font rotation"
                    IsChecked="{Binding FontSetting.UseNormalFontRotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <StackPanel Visibility="{Binding ElementName=UseNormalFontRotation, Path=IsChecked,Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock 
                        TextWrapping="Wrap" Margin="0,10" 
                        Text="Adjust slider range to define minimum to maximum rotation of text for normal and bold text, this range will be ignored if either bold or normal font is not used."/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock 
                            Margin="5,0"
                            Text="{Binding ElementName=NormalRangeSlide, Path=RangeStart, Mode=OneWay}"/>
                        <control:RangeSlider 
                            x:Name="NormalRangeSlide"
                            Grid.Column="1" 
                            RangeStartSelected="{Binding FontSetting.NormalFontMinRotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            RangeStopSelected="{Binding FontSetting.NormalFontMaxRotation,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            Width="300" ClipToBounds="False"
                            HorizontalAlignment="Center"
                            RangeStart="-20" 
                            RangeStop="20"/>
                        <TextBlock 
                            Margin="5,0"
                            Grid.Column="2" 
                            Text="{Binding ElementName=NormalRangeSlide, Path=RangeStop, Mode=OneWay}"/>
                    </Grid>
                    <Grid 
                        Margin="10"
                        Width="100"
                        HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock FontSize="30" Text="a">
                            <TextBlock.RenderTransform>
                                <RotateTransform 
                                    CenterX="8" CenterY="27" 
                                    Angle="{Binding ElementName=NormalRangeSlide, Path=RangeStartSelected, Mode=OneWay}"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock Grid.Column="1" FontSize="30" Text="a"/>
                        <TextBlock Grid.Column="2" FontSize="30" Text="a">
                            <TextBlock.RenderTransform>
                                <RotateTransform 
                                    CenterX="8" CenterY="27" 
                                    Angle="{Binding ElementName=NormalRangeSlide, Path=RangeStopSelected, Mode=OneWay}"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Grid>
                </StackPanel>
            </StackPanel>

            <StackPanel Margin="20" ClipToBounds="False">
                <TextBlock 
                    Grid.ColumnSpan="2"
                    Text="Italic font rotation settings" 
                    FontSize="18" 
                    Margin="0,10"
                    Foreground="{StaticResource AccentBrush}"/>
                <CheckBox 
                    Foreground="{StaticResource ForegroundBrush}"
                    x:Name="UseItalicFontRotation"
                    Content="Use italic font rotation"
                    IsChecked="{Binding FontSetting.UseItalicFontRotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <StackPanel Visibility="{Binding ElementName=UseItalicFontRotation, Path=IsChecked,Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock 
                        TextWrapping="Wrap" Margin="0,10" 
                        Text="Adjust slider range to define minimum to maximum rotation of text for italic and bold-italic text, this range will be ignored if either italic and bold-italic font is not used."/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock 
                            Margin="5,0"
                            Text="{Binding ElementName=ItalicRangeSlide, Path=RangeStart, Mode=OneWay}"/>
                        <control:RangeSlider 
                            x:Name="ItalicRangeSlide"
                            Grid.Column="1" 
                            RangeStartSelected="{Binding FontSetting.ItalicFontMinRotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            RangeStopSelected="{Binding FontSetting.ItalicFontMaxRotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            Width="300" ClipToBounds="False"
                            HorizontalAlignment="Center"
                            RangeStart="-20" 
                            RangeStop="20"/>
                        <TextBlock 
                            Margin="5,0"
                            Grid.Column="2" 
                            Text="{Binding ElementName=ItalicRangeSlide, Path=RangeStop, Mode=OneWay}"/>
                    </Grid>
                    <Grid 
                        Margin="10"
                        Width="100"
                        HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock FontStyle="Italic" FontSize="30" Text="a">
                            <TextBlock.RenderTransform>
                                <RotateTransform 
                                    CenterX="8" CenterY="27" 
                                    Angle="{Binding ElementName=ItalicRangeSlide, Path=RangeStartSelected, Mode=OneWay}"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock FontStyle="Italic" Grid.Column="1" FontSize="30" Text="a"/>
                        <TextBlock FontStyle="Italic" Grid.Column="2" FontSize="30" Text="a">
                            <TextBlock.RenderTransform>
                                <RotateTransform 
                                    CenterX="8" CenterY="27" 
                                    Angle="{Binding ElementName=ItalicRangeSlide, Path=RangeStopSelected, Mode=OneWay}"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Grid>
                </StackPanel>
            </StackPanel>
            <StackPanel Margin="20">
                <TextBlock 
                    Grid.ColumnSpan="2"
                    Text="Engine Settings" 
                    FontSize="18" 
                    Margin="0,10"
                    Foreground="{StaticResource AccentBrush}"/>
                <TextBlock 
                    TextWrapping="Wrap" Margin="0,0,0,20" 
                    Text="Select the training engine for training ML.net model."/>
                <RadioButton 
                    GroupName="Engine"
                    Margin="0,3"
                    IsChecked="{Binding EngineSetting.UseSdcaMaximumEntropy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="SDCA maximum entropy"/>
                <RadioButton 
                    GroupName="Engine"
                    Margin="0,3"
                    IsChecked="{Binding EngineSetting.UseSdcaNonCalibrated, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="SDCA non calibrated"/>
                <RadioButton 
                    GroupName="Engine"
                    Margin="0,3"
                    IsChecked="{Binding EngineSetting.UseLbfgsMaximumEntropy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="Limited memory BFGS"/>
                <RadioButton 
                    GroupName="Engine"
                    Margin="0,3"
                    IsChecked="{Binding EngineSetting.UseNaiveBayes, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    Content="Naive bayes"/>
                <RadioButton 
                    GroupName="Engine"
                    Margin="0,3"
                    IsChecked="{Binding EngineSetting.UseLightGmb,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="Light gradient boosting machine"/>
                <RadioButton 
                    GroupName="Engine"
                    Margin="0,3"
                    IsChecked="{Binding EngineSetting.UseImageClassification, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Content="Tensorflow"/>
            </StackPanel>
        </WrapPanel>
        <Grid Grid.Column="2"  Margin="20" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock 
                Grid.ColumnSpan="2"
                Text="Selected Fonts" 
                FontSize="18" 
                Margin="0,10"
                Foreground="{StaticResource AccentBrush}"/>
            <ScrollViewer HorizontalAlignment="Stretch" VerticalScrollBarVisibility="Auto" Grid.Row="1">
                <ItemsControl 
                    Grid.Row="1" 
                    Focusable="False"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    ItemsSource="{Binding TrainingFontSettingList, Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border 
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="2"
                                CornerRadius="2"
                                Padding="20,10"
                                Background="{StaticResource PressedBackgroundBrush}"
                                Focusable="False">
                                <Viewbox 
                                    HorizontalAlignment="Left"
                                    Stretch="Uniform"
                                    Height="20"
                                    Width="100">
                                    <TextBlock 
                                    Focusable="False"
                                    Foreground="{StaticResource ForegroundBrush}"
                                    Text="{Binding FontName, Mode=OneWay}"
                                    FontFamily="{Binding FontName, Mode=OneWay, Converter={StaticResource NameToFontConverter}}"/>
                                </Viewbox>

                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
        </Grid>

        <Grid 
            Grid.Row="2" 
            Grid.ColumnSpan="3"
            Background="{StaticResource BackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="500" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="500" />
            </Grid.ColumnDefinitions>
            <StackPanel 
                Grid.Column="2"
                HorizontalAlignment="Left" 
                VerticalAlignment="Center" 
                Margin="40,10"
                Visibility="{Binding TrainModelCommand.IsLoading, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Margin="0,5" Text="Loading data (">
                    <Run Text="{Binding TrainModelCommand.Current, Mode=OneWay}"/>
                    <Run Text="of"/>
                    <Run Text="{Binding  TrainModelCommand.Maximum, Mode=OneWay}"/>
                    <Run Text=") ..."/>
                </TextBlock>
                <ProgressBar 
                    Width="400"
                    Height="5"
                    Background="{StaticResource ForegroundBrush}"
                    Foreground="{StaticResource AccentBrush}"
                    Maximum="{Binding TrainModelCommand.Maximum, Mode=OneWay}"
                    Value="{Binding TrainModelCommand.Current, Mode=OneWay}"/>
            </StackPanel>
            <StackPanel
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Margin="40,10"
                Grid.Column="2"
                Visibility="{Binding TrainModelCommand.IsTraining, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">

                <TextBlock
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource AccentBrush}"
                    Margin="0,10">
                    <Run Text="Training model using"/>
                    <Run Text="{Binding TrainModelCommand.Engine, Mode=OneWay}"/>
                    <Run Text="..."/>
                </TextBlock>
                <ProgressBar 
                    Width="400"
                    Height="5"
                    Background="{StaticResource ForegroundBrush}"
                    Foreground="{StaticResource AccentBrush}" IsIndeterminate="True"/>
            </StackPanel>

            <Control
                Grid.Column="0"
                VerticalAlignment="Center"
                HorizontalAlignment="Right"
                Margin="40,10"
                DataContext="{Binding EvaluateModelCommand, Mode=OneWay}">

                <Control.Template>
                    <ControlTemplate TargetType="Control">
                        <Grid>
                            <Grid x:Name="Details" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="80" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Foreground="{StaticResource AccentBrush}" Text="Micro Accurcay"/>
                                <TextBlock Grid.Column="1" Text="{Binding MicroAccuracy, Mode=OneWay}"/>
                                <TextBlock Foreground="{StaticResource AccentBrush}" Grid.Row="1" Text="Macro Accurcay"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding MacroAccuracy, Mode=OneWay}"/>

                                <TextBlock Foreground="{StaticResource AccentBrush}" Text="Log Loss" Grid.Column="2"/>
                                <TextBlock Text="{Binding LogLoss,Mode=OneWay}" Grid.Column="3"/>
                                <TextBlock Foreground="{StaticResource AccentBrush}" Grid.Row="1" Text="Log Loss Reduction" Grid.Column="2"/>
                                <TextBlock Text="{Binding LogLossReduction,Mode=OneWay}" Grid.Row="1" Grid.Column="3"/>
                            </Grid>
                            <StackPanel x:Name="Progress" Visibility="Collapsed">
                                <TextBlock Margin="0,5" Text="Loading data">
                                    <Run Text="{Binding Current, Mode=OneWay}"/>
                                    <Run Text="of"/>
                                    <Run Text="{Binding Maximum, Mode=OneWay}"/>
                                </TextBlock>
                                <ProgressBar 
                                    Width="400"
                                    Height="5"
                                    Background="{StaticResource ForegroundBrush}"
                                    Foreground="{StaticResource AccentBrush}"
                                    Maximum="{Binding Maximum, Mode=OneWay}"
                                    Value="{Binding Current, Mode=OneWay}"/>
                            </StackPanel>
                            <TextBlock x:Name="Error" Visibility="Collapsed" Foreground="{StaticResource AccentBrush}" Text="{Binding Error, Mode=OneWay}"/>
                            <TextBlock x:Name="Waiting" Visibility="Collapsed" Foreground="{StaticResource AccentBrush}" Text="Evaluating model .."/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Evaluated">
                                <Setter  TargetName="Details" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Error">
                                <Setter  TargetName="Error" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Evaluating">
                                <Setter  TargetName="Waiting" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Loading">
                                <Setter  TargetName="Progress" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Ideal">
                                <Setter  Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Control.Template>
            </Control>

            <Control
                Grid.Column="1"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Margin="40,10"
                DataContext="{Binding CheckAccuracyCommand, Mode=OneWay}">
                <Control.Template>
                    <ControlTemplate TargetType="Control">
                        <Grid>
                            <Grid x:Name="Details" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="80" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Foreground="{StaticResource AccentBrush}" Text="Accuracy"/>
                                <TextBlock Grid.Column="1" Text="{Binding Accuracy, Mode=OneWay}"/>
                                <TextBlock Foreground="{StaticResource AccentBrush}" Text="Average Score" Grid.Row="1"/>
                                <TextBlock Text="{Binding AverageScore,Mode=OneWay}" Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                            <StackPanel x:Name="Progress" Visibility="Collapsed">
                                <TextBlock Margin="0,5" Text="Loading data.."/>
                                <ProgressBar 
                                    Width="400"
                                    Height="5"
                                    Background="{StaticResource ForegroundBrush}"
                                    Foreground="{StaticResource AccentBrush}"
                                    Maximum="{Binding Maximum, Mode=OneWay}"
                                    Value="{Binding Current, Mode=OneWay}"/>
                            </StackPanel>
                            <TextBlock x:Name="Error" Visibility="Collapsed" Foreground="{StaticResource AccentBrush}" Text="{Binding Error, Mode=OneWay}"/>
                            <TextBlock x:Name="Waiting" Visibility="Collapsed" Foreground="{StaticResource AccentBrush}" Text="Evaluating model .."/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Evaluated">
                                <Setter  TargetName="Details" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Error">
                                <Setter  TargetName="Error" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Evaluating">
                                <Setter  TargetName="Waiting" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Loading">
                                <Setter  TargetName="Progress" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Ideal">
                                <Setter  Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Control.Template>
            </Control>
        </Grid>

    </Grid>
</Window>
